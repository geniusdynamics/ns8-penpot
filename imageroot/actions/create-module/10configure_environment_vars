#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent
import os
import secrets

# Try to parse the stdin as JSON.
# If parsing fails, output everything to stderr
data = json.load(sys.stdin)


def generate_random_password():
    password = os.urandom(16).hex()
    return password[:16]


# This is specific to you module, so you need to change it accordingly.
# POSTGRES DB CONFIGURATION
POSTGRES_DB = data.get("POSTGRES_DB", "penpot")
POSTGRES_USER = data.get("POSTGRES_USER", "postgres")
POSTGRES_PASSWORD = generate_random_password()

postgres_config = {
    "POSTGRES_DB": POSTGRES_DB,
    "POSTGRES_USER": POSTGRES_USER,
    "POSTGRES_PASSWORD": POSTGRES_PASSWORD,
}
agent.write_envfile("database.env", postgres_config)

penpot_database = {
    "PENPOT_DATABASE_URI": f"postgresql://postgresql-app:5432/{POSTGRES_DB}",
    "PENPOT_DATABASE_USERNAME": POSTGRES_USER,
    "PENPOT_DATABASE_PASSWORD": POSTGRES_PASSWORD,
}
agent.write_envfile("penpot-database.env", penpot_database)

PENPOT_SECRET_KEY = secrets.token_urlsafe(64)
agent.write_envfile("penpot-secret.env", {"PENPOT_SECRET_KEY": PENPOT_SECRET_KEY})
# just before starting systemd unit
agent.dump_env()
